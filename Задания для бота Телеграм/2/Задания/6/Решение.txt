Составим таблицу истинности для выражения ((y → w) ≡ (x → ¬z)) ∧ (x ∨ w) вручную или при помощи языка Python:

Наборы переменных, при которых данное выражение равно 0.

print("x y z w")
for x in range(0, 2):
    for y in range(0, 2):
        for z in range(0, 2):
            for w in range(0, 2):
                if not(((y <= w) == (x <= (not z))) and (x or w)):
                    print(x, y, z, w)
В наборах переменные запишем в порядке х, y, z, w.
Получим следующие наборы:

(0, 0, 0, 0),
(0, 0, 1, 0),
(0, 1, 0, 0),
(0, 1, 1, 0),
(1, 0, 1, 0),
(1, 0, 1, 1),
(1, 1, 0, 0),
(1, 1, 1, 1).

 
Наборы переменных, при которых данное выражение равно 1.

print("x y z w")
for x in range(0, 2):
    for y in range(0, 2):
        for z in range(0, 2):
            for w in range(0, 2):
                if ((y <= w) == (x <= (not z))) and (x or w):
                    print(x, y, z, w)
В наборах переменные запишем в порядке х, y, z, w.
Получим следующие наборы:

(0, 0, 0, 1),
(0, 0, 1, 1),
(0, 1, 0, 1),
(0, 1, 1, 1),
(1, 0, 0, 0),
(1, 0, 0, 1),
(1, 1, 0, 1),
(1, 1, 1, 0).

Заметим из наборов переменных, при которых данное выражение равно 0, что единственный набор , содержащий ровно три единицы (1, 0, 1, 1), следовательно, переменной y соответствует первый столбец.
Рассмотрим наборы переменных, при которых данное выражение равно 1. Ко второй строчке таблицы истинности могут подойти наборы:
(0, 0, 1, 1), (0, 1, 0, 1) или (1, 0, 0, 1). В первом столбце таблицы истинности стоит y, которое во второй строке принимает значение 1, поэтому подойдет только набор (0, 1, 0, 1), следовательно, переменной w соответствует третий столбец. Так как в третьей строке таблицы переменная w принимает значение 0, то могут подойти наборы (1, 1, 1, 0) или (1, 0, 0, 0). Набор (1, 1, 1, 0) не подойдет ,так как хотя бы одна из переменных x или z должна принимать значение 0, поэтому переменной z соответствует второй столбец, а переменной x соответствует четвертый столбец, что следует из набора (1, 0, 0, 0).